name: SCADE CICD DEMO
run-name: ${{ github.actor }} is playing SCADE CICD Demo ðŸš€
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:


env:
  MAIN_PYTHON_VERSION: '3.10'
  SCADE_VERSION: '24.2'
  DOCUMENTATION_CNAME: 'Calculator'
  LIBRARY_NAME: 'Calculator'
  ARTIFACT_NAME: 'Calculator'
    # SCADE project relative path without extension
  SCADE_PROJECT_ROOT: "Model\\Calculator\\CaculatorPrj"
  # SCADE test project relative path without extension
  SCADE_PROJECT_TEST_ROOT: "Model\\Calculator_Test\\Calculator_Test"
  # SCADE test result project relative path without extension
  SCADE_PROJECT_TEST_RESULT_ROOT: "Model\\Calculator_Test_Result\\Calculator_Test_Result"
  # SCADE Configurations
  CONF_CHECK: KCG
  CONF_REPORT: RTF
  CONF_GEN: KCG
  CONF_TEST: Test
  CONF_COV: Coverage
  CONF_SIM: Simulation
  CONF_METRICS: MetricRule
  CONF_RULES: RuleSuccess

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  check-model:
    name: "Check model"
    runs-on: [self-hosted, xiao-laptop]
    strategy:
      matrix:
        os: [windows-latest]
        scade-version: ['24.2']
      fail-fast: false
    steps:
        - name: "Get SCADE installation directory"
          uses: ansys/scade-actions/get-scade-dir@v2
          id: get-scade-dir
          with:
            scade-version: ${{ env.SCADE_VERSION }}
        
        - name: "Check a SCADE Suite model"
          uses: ansys/scade-actions/suite-check@v2
          id: suite-check
          with:
            scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
            project: ${{env.SCADE_PROJECT_ROOT}}.etp
            configuration:  ${{ env.CONF_CHECK }}
    
  report-model:
    name: Report model
    runs-on: [self-hosted, xiao-laptop]
    # run this step only if the model check is successfull
    needs: check-model
    steps:
      - name: "Get SCADE installation directory"
        uses: ansys/scade-actions/get-scade-dir@v2
        id: get-scade-dir
        with:
          scade-version: ${{ env.SCADE_VERSION }}
      
      - name: "Generate the documentation of a SCADE Suite model"
        uses: ansys/scade-actions/suite-report@v2
        id: suite-report
        with:
          scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
          project: ${{env.SCADE_PROJECT_ROOT}}.etp
          configuration:  ${{ env.CONF_REPORT }}      

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: Design Report
          path: ${{ env.SCADE_PROJECT_ROOT }}.rtf
          if-no-files-found: error
          retention-days: 1
    
  gen-code:
    name: Generate Code
    runs-on: [self-hosted, xiao-laptop]
    needs: check-model
    steps:
      - name: "Get SCADE installation directory"
        uses: ansys/scade-actions/get-scade-dir@v2
        id: get-scade-dir
        with:
          scade-version: ${{ env.SCADE_VERSION }}
      
      - name: "Generate the code of a SCADE Suite model"
        uses: ansys/scade-actions/suite-code@v2
        id: suite-code
        with:
          scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
          project: ${{env.SCADE_PROJECT_ROOT}}.etp
          configuration:  ${{ env.CONF_GEN }}      
      
      - name: "Upload code target directory to artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: "scade-suite-code-target-directory"
          path: "${{ steps.suite-code.outputs.target-directory }}/*.*"
          retention-days: 7
          if-no-files-found: error
    
  simulation-build:
    name: Simulation Build
    runs-on: [self-hosted, xiao-laptop]
    needs: check-model
    steps:
    - name: "Get SCADE installation directory"
      uses: ansys/scade-actions/get-scade-dir@v2
      id: get-scade-dir
      with:
        scade-version: ${{ env.SCADE_VERSION }}
      
    - name: "Generate the code of a SCADE Suite model"
      uses: ansys/scade-actions/suite-code@v2
      id: suite-sim-build
      with:
        scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
        project: ${{env.SCADE_PROJECT_ROOT}}.etp
        configuration:  ${{ env.CONF_SIM }}
        build: "true"
       
  metrics-rules-check:
    name: Model metrics and rules Check
    runs-on: [self-hosted, xiao-laptop]
    needs: check-model
    steps:
    - name: "Get SCADE installation directory"
      uses: ansys/scade-actions/get-scade-dir@v2
      id: get-scade-dir
      with:
        scade-version: ${{ env.SCADE_VERSION }}

    - name: "Compute metrics with suite-metrics"
      uses: ansys/scade-actions/suite-metrics@v2
      id: suite-metrics
      with:
        scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
        project: ${{env.SCADE_PROJECT_ROOT}}.etp
        configuration: ${{ env.CONF_METRICS }}
    
    - name: "Upload metrics report artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: "metrics"
        path: "${{ steps.suite-metrics.outputs.report }}"
        retention-days: 7
        if-no-files-found: error

    - name: "Check custom rules with suite-rules"
      uses: ansys/scade-actions/suite-rules@v2
      id: suite-rules
      with:
        scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
        project: ${{env.SCADE_PROJECT_ROOT}}.etp
        configuration: ${{ env.CONF_RULES }}        
    
    - name: "Upload Custom rules report artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: "check-custom-rules"
        path: "${{ steps.suite-rules.outputs.report }}"
        retention-days: 7
        if-no-files-found: error
    
  model-test:
    name: Model Test
    runs-on: [self-hosted, xiao-laptop]
    needs: check-model
    steps:
    - name: "Get SCADE installation directory"
      uses: ansys/scade-actions/get-scade-dir@v2
      id: get-scade-dir
      with:
        scade-version: ${{ env.SCADE_VERSION }}
    
    - name: "Run the tests with test-execution"
      uses: ansys/scade-actions/test-execute@v2
      id: test-execute
      with:
        scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
        test-project: ${{ env.SCADE_PROJECT_TEST_ROOT }}.etp
        results-project: ${{ env.SCADE_PROJECT_TEST_RESULT_ROOT }}.etp
        configuration: ${{ env.CONF_TEST }}
        junit-report: "junit-reports/Model.xml"

    - name: "Upload JUnit report to artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: "junit-report"
        path: "junit-reports\\Model.xml"
        retention-days: 7
        if-no-files-found: error
    
    - name: "Acquire the model coverage with test-coverage"
      uses: ansys/scade-actions/test-coverage@v2
      with:
        scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
        test-project: ${{ env.SCADE_PROJECT_TEST_ROOT }}.etp
        results-project: ${{ env.SCADE_PROJECT_TEST_RESULT_ROOT }}.etp
        configuration:  ${{ env.CONF_COV }}
        cov-status: "cov_status/Model.json"
    
    - name: "Upload coverage status to artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: "coverage-status"
        path: "cov_status\\Model.json"
        retention-days: 7
        if-no-files-found: error   

      
        
     #   - name: "Get the Python installation installed with Ansys SCADE"
     #     uses: ansys/scade-actions/get-scade-python@v2
     #     id: get-scade-python
     #     with:
     #       scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
