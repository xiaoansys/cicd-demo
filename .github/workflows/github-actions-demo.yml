name: SCADE CICD DEMO
run-name: ${{ github.actor }} is playing SCADE CICD Demo ðŸš€
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:


env:
  MAIN_PYTHON_VERSION: '3.10'
  DOCUMENTATION_CNAME: 'Calculator'
  LIBRARY_NAME: 'Calculator'
  ARTIFACT_NAME: 'Calculator'
    # SCADE project relative path without extension
  SCADE_PROJECT_ROOT: "Model\\Calculator\\CaculatorPrj"
  # SCADE test project relative path without extension
  SCADE_PROJECT_TEST_ROOT: "Model\\Calculator_Test\\Calculator_Test"
  # SCADE test result project relative path without extension
  SCADE_PROJECT_TEST_RESULT_ROOT: "Model\\Calculator_Test\\Calculator_Test"
  # SCADE Configurations
  CONF_CHECK: KCG
  CONF_REPORT: RTF
  CONF_GEN: KCG
  CONF_TEST: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  check-model:
    name: "Check model"
    runs-on: [self-hosted, xiao-laptop]
    strategy:
      matrix:
        os: [windows-latest]
        scade-version: ['24.2']
      fail-fast: false
    steps:
        - name: "Get SCADE installation directory"
          uses: ansys/scade-actions/get-scade-dir@v2
          id: get-scade-dir
          with:
            scade-version: "24.2"
        
        - name: "Check a SCADE Suite model"
          uses: ansys/scade-actions/suite-check@v2
          id: suite-check
          with:
            scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
            project: ${{env.SCADE_PROJECT_ROOT}}.etp
            configuration:  ${{ env.CONF_CHECK }}
    
  report-model:
    name: Report model
    runs-on: [self-hosted, xiao-laptop]
    # run this step only if the model check is successfull
    needs: check-model
    steps:
      - name: "Get SCADE installation directory"
        uses: ansys/scade-actions/get-scade-dir@v2
        id: get-scade-dir
        with:
          scade-version: "24.2"
      
      - name: "Generate the documentation of a SCADE Suite model"
        uses: ansys/scade-actions/suite-report@v2
        id: suite-report
        with:
          scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
          project: ${{env.SCADE_PROJECT_ROOT}}.etp
          configuration:  ${{ env.CONF_REPORT }}      

      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: Design Report
          path: ${{ env.SCADE_PROJECT_ROOT }}.rtf
          if-no-files-found: error
          retention-days: 1
    
  gen-code:
    name: Generate Code
    runs-on: [self-hosted, xiao-laptop]
    needs: check-model
    steps:
      - name: "Get SCADE installation directory"
        uses: ansys/scade-actions/get-scade-dir@v2
        id: get-scade-dir
        with:
          scade-version: "24.2"
      
      - name: "Generate the code of a SCADE Suite model"
        uses: ansys/scade-actions/suite-code@v2
        id: suite-code
        with:
          scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
          project: ${{env.SCADE_PROJECT_ROOT}}.etp
          configuration:  ${{ env.CONF_GEN }}      
      
      - name: Upload Code
        uses: actions/upload-artifact@v4
        with:
          name: Generated Code
          path: ${{ env.SCADE_PROJECT_ROOT }}_generated_code.zip
          if-no-files-found: error
          retention-days: 1

      
        
     #   - name: "Get the Python installation installed with Ansys SCADE"
     #     uses: ansys/scade-actions/get-scade-python@v2
     #     id: get-scade-python
     #     with:
     #       scade-dir: ${{ steps.get-scade-dir.outputs.scade-directory }}
